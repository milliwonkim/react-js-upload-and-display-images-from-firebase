{"ast":null,"code":"var _jsxFileName = \"/Users/kiwonkim/Documents/GitHub/Image-Uploader-React-Firebase/src/ImageUpload/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport storage from '../Firebase/index';\n\nfunction ImageUpload() {\n  const [image, setImage] = useState(null);\n  const [display, setDisplay] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      setImage(image);\n    }\n  };\n\n  useEffect(() => {\n    console.log(display);\n    var storageRef = storage.ref();\n    var listRef = storageRef.child('images/'); // Find all the prefixes and items.\n\n    listRef.listAll().then(function (res) {\n      // res.prefixes.forEach(function (folderRef) {\n      //     // All the prefixes under listRef.\n      //     // You may call listAll() recursively on them.\n      //     console.log('folderRef', folderRef);\n      // });\n      res.items.forEach(function (itemRef) {\n        console.log('itemRef: ', itemRef);\n        displayImage(itemRef);\n        setDisplay(prevDisplay => [...prevDisplay, res]);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const displayImage = images => {\n    images.getDownloadURL().then(url => {\n      console.log('url of displayImage: ', url);\n    });\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on('state_changed', snapshot => {\n      // progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      // Error function ...\n      console.log(error);\n    }, () => {\n      // complete function ...\n      storage.ref('images').child(image.name).getDownloadURL().then(url => {\n        console.log('url: ', url);\n        setDisplay(prevDisplay => [...prevDisplay, url]);\n      });\n    });\n  };\n\n  const a = () => {\n    for (var i = 0; i < display.length; i++) {\n      console.log('display from method a: ', display[i]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"green-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"React Firebase Image Uploader\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    value: progress,\n    max: \"100\",\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: a,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Console Log\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${progress}%`,\n      height: '20px',\n      background: 'blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), display.map((d, index) => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: index,\n      src: d || 'https://dapp.dblog.org/img/default.jpg',\n      alt: \"Uploaded Images\",\n      height: \"300\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    });\n  }));\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/kiwonkim/Documents/GitHub/Image-Uploader-React-Firebase/src/ImageUpload/index.js"],"names":["React","useState","useEffect","storage","ImageUpload","image","setImage","display","setDisplay","progress","setProgress","handleChange","e","target","files","console","log","storageRef","ref","listRef","child","listAll","then","res","items","forEach","itemRef","displayImage","prevDisplay","catch","error","images","getDownloadURL","url","handleUpload","uploadTask","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","a","i","length","width","height","background","map","d","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport storage from '../Firebase/index';\n\nfunction ImageUpload() {\n    const [image, setImage] = useState(null);\n    const [display, setDisplay] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            setImage(image);\n        }\n    };\n\n    useEffect(() => {\n        console.log(display);\n        var storageRef = storage.ref();\n        var listRef = storageRef.child('images/');\n\n        // Find all the prefixes and items.\n        listRef\n            .listAll()\n            .then(function (res) {\n                // res.prefixes.forEach(function (folderRef) {\n                //     // All the prefixes under listRef.\n                //     // You may call listAll() recursively on them.\n                //     console.log('folderRef', folderRef);\n                // });\n                res.items.forEach(function (itemRef) {\n                    console.log('itemRef: ', itemRef);\n                    displayImage(itemRef);\n                    setDisplay((prevDisplay) => [...prevDisplay, res]);\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }, []);\n\n    const displayImage = (images) => {\n        images.getDownloadURL().then((url) => {\n            console.log('url of displayImage: ', url);\n        });\n    };\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {\n                // progress function ...\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                // Error function ...\n                console.log(error);\n            },\n            () => {\n                // complete function ...\n                storage\n                    .ref('images')\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then((url) => {\n                        console.log('url: ', url);\n                        setDisplay((prevDisplay) => [...prevDisplay, url]);\n                    });\n            }\n        );\n    };\n\n    const a = () => {\n        for (var i = 0; i < display.length; i++) {\n            console.log('display from method a: ', display[i]);\n        }\n    };\n\n    return (\n        <div className='center'>\n            <br />\n            <h2 className='green-text'>React Firebase Image Uploader</h2>\n            <br />\n            <br />\n            <div className='row'>\n                <progress value={progress} max='100' className='progress' />\n            </div>\n            <br />\n            <br />\n            <br />\n            <div className='file-field input-field'>\n                <div className='btn'>\n                    <span>File</span>\n                    <input type='file' onChange={handleChange} />\n                </div>\n                <div className='file-path-wrapper'>\n                    <input className='file-path validate' type='text' />\n                </div>\n            </div>\n            <button onClick={a}>Console Log</button>\n            <button\n                onClick={handleUpload}\n                className='waves-effect waves-light btn'>\n                Upload\n            </button>\n            <br />\n            <br />\n            <div\n                style={{\n                    width: `${progress}%`,\n                    height: '20px',\n                    background: 'blue',\n                }}></div>\n            <br />\n            <br />\n            {display.map((d, index) => {\n                return (\n                    <img\n                        key={index}\n                        src={d || 'https://dapp.dblog.org/img/default.jpg'}\n                        alt='Uploaded Images'\n                        height='300'\n                        width='400'\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}